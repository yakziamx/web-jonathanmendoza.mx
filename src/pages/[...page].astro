---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/base.layout.astro";
import Pagination from "@/components/pagination.component.astro";
import Summary from "@/components/summary.component.astro";
import { Site } from "@/config";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async ({ paginate }) => {
  const posts = (await getCollection("posts"))
    .filter((post) => !post.data.isDraft)
    .sort(
      (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
    );

  return paginate(posts, { pageSize: Site.paginationPageSize });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const { currentPage, lastPage } = page;
---

<BaseLayout
  meta={{
    title: currentPage > 1 ? `Page ${currentPage}` : undefined,
  }}
>
  <div class="flex-grow p-4">
    <div class="mx-auto my-16 max-w-3xl text-center">
      
      <picture class="flex justify-center items-center">
        <img class="max-w-96 pb-8" alt="Illustration of person reading a book" src="/assets/home-illustration.png">
      </picture>
      
      <h1 class="text-4xl font-bold lg:text-6xl">
        Benvenido al blog de <br>
        {Site.title}
      </h1>

      <div class="prose py-8 dark:prose-invert lg:prose-lg">
        <p>
          Soy un estudiante de ingeniería de software y un apasionado por la tecnología.
        </p>
      </div>
    </div>

    <div class="mx-auto max-w-3xl">
      <div class="flex flex-col gap-16">
        {page.data.map((post) => <Summary post={post} />)}

        {lastPage > 1 && <Pagination {...page} />}
      </div>
    </div>
  </div>
</BaseLayout>
